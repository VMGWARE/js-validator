version: 25
jobs:
- name: Push to GitHub
  steps:
  - !PushRepository
    name: push
    remoteUrl: https://github.com/VMGWARE/js-validator
    passwordSecret: access-token
    force: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  triggers:
  - !BranchUpdateTrigger {}
  - !TagCreateTrigger {}
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: Pull from GitHub
  steps:
  - !PullRepository
    name: pull
    remoteUrl: https://github.com/VMGWARE/js-validator
    syncToChildProject: false
    passwordSecret: access-token
    refs: refs/heads/* refs/tags/*
    withLfs: false
    force: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  triggers:
  - !ScheduleTrigger
    cronExpression: 0 0 1 * * ?
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: Build
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: build & test
    runInContainer: true
    image: node:18
    interpreter: !DefaultInterpreter
      commands:
      - npm ci
      - export CI=TRUE
      - npm run lint
      - npm test -- --json --outputFile=testResults.json
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishJestReportStep
    name: publish test report
    reportName: Jest Test Report
    filePatterns: testResults.json
    condition: ALWAYS
  triggers:
  - !BranchUpdateTrigger {}
  - !PullRequestUpdateTrigger {}
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: Deploy
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: publish
    runInContainer: true
    image: node:18
    interpreter: !DefaultInterpreter
      commands:
      - npm ci
      - npm run build
      - echo //registry.npmjs.org/:_authToken=@secret:NODE_AUTH_TOKEN@ >> .npmrc
      - echo email=@secret:NODE_AUTH_EMAIL@ >> .npmrc
      - echo always-auth=true >> .npmrc
      - npm publish --access public
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  triggers:
  - !TagCreateTrigger {}
  jobDependencies:
  - jobName: Build
    requireSuccessful: true
    artifacts: '**'
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
